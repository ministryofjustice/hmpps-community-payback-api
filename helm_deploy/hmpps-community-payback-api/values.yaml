generic-service:
  nameOverride: hmpps-community-payback-api
  productId: "HMPPS552" # productId for the product that this belongs too, i.e. DPS001, see README.md for details

  replicaCount: 4

  image:
    repository: ghcr.io/ministryofjustice/hmpps-community-payback-api
    tag: app_version # override at deployment time
    port: 8080

  ingress:
    enabled: true
    host: app-hostname.local # override per environment
    tlsSecretName: hmpps-community-payback-api-cert
    annotations:
      # See HmppsQueueResource for why this needs securing in the ingress
      nginx.ingress.kubernetes.io/server-snippet: |
        server_tokens off;
        location /queue-admin/retry-all-dlqs {
          deny all;
          return 401;
        }

  # Used to access resources like S3 buckets, SQS queues and SNS topics
  serviceAccountName: hmpps-community-payback-api

  # Environment variables to load into the deployment
  env:
    JAVA_OPTS: "-Xmx512m"
    SERVER_PORT: "8080"
    SENTRY_SAMPLE-RATE: 1
    SENTRY_TRACES-SAMPLE-RATE: 0.01
    APPLICATIONINSIGHTS_CONFIGURATION_FILE: applicationinsights.json
    CLIENT_COMMUNITY_PAYBACK_AND_DELIUS_URL: "http://localhost:8080/mocks/community-payback-and-delius"
    SPRING_DATASOURCE_URL: "jdbc:postgresql://${DB_HOST}/${DB_NAME}"

  # Pre-existing kubernetes secrets to load as environment variables in the deployment.
  # namespace_secrets:
  #   [name of kubernetes secret]:
  #     [name of environment variable as seen by app]: [key of kubernetes secret to load]

  namespace_secrets:
    hmpps-community-payback-api-application-insights:
      APPLICATIONINSIGHTS_CONNECTION_STRING: "APPLICATIONINSIGHTS_CONNECTION_STRING"
    hmpps-community-payback-api-sentry:
      SENTRY_DSN: "SENTRY_DSN"
    hmpps-domain-events-topic:
      HMPPS_SQS_TOPICS_HMPPSEVENTTOPIC_ARN: "topic_arn"
    rds-postgresql-instance-output:
      SPRING_DATASOURCE_USERNAME: "database_username"
      SPRING_DATASOURCE_PASSWORD: "database_password"
      DB_HOST: "rds_instance_endpoint"
      DB_NAME: "database_name"

  allowlist:
    groups:
      - internal

generic-prometheus-alerts:
  targetApplication: hmpps-community-payback-api

# Whether to deploy the stubs
# Override in values-dev.yaml
# Also update the environment variables to point the application to the mocked services (on port 80)
deploy_stubs: false